mixinGrid()

  $cols = $colCount

  .row
    display flex
    flex-wrap wrap

    &.ai-c
      align-items center
    &.ai-b
      align-items flex-end
    &.jc-sb
      justify-content space-between
    &.jc-c
      justify-content center
    &.jc-fe
      justify-content flex-end

    > .col
      flex-grow 1
      flex-basis 0
      max-width 100%
      &.no-grow
        flex-grow 0
    > [class^=col-]
      // for all col-constant
      position relative
      min-height 1px
      width 100%

    // cols size
    for $colNum in (1..$cols)
      .col-{$colNum}
        flex 0 0 (100% * $colNum / $cols)
        max-width (100% * $colNum / $cols)

    // offset size
    for $colNum in (1..$cols)
      .ofs-{$colNum}
        margin-left 'calc(100% / %s * %s)' % ($cols $colNum)


  @media $desktop
    $size = $colGapDesktop / 2
    .row
      &.gut
        margin - $size
        >[class^=col]
          padding $size

  @media $tablet
    $size = $colGapTablet / 2
    .row
      &.gut
        margin - $size
        >[class^=col]
          padding $size

      for $colNum in (1..$cols)
        .col-t-{$colNum}
          flex 0 0 (100% * $colNum / $cols)
          max-width (100% * $colNum / $cols)


  @media $mobile
    .row
      &.gut
        margin 0
        >[class^=col] + [class^=col]
          margin-top 1.5rem

      for $colNum in (1..$cols)
        .col-{$colNum}
          flex 0 0 100%
          max-width 100%



/* for custom needs
.col-12 100%
.col-10 83.333333%
.col-9 75%
.col-8 66.666667%
.col-7 58.333333%
.col-6 50%
.col-5 41.666667%
.col-4 33.333333%
.col-3 25%
.col-2 16.666667%
.col-1 8.3333333%

*/


mixinGrid()
